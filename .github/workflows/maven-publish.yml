name: Publish to Maven Central And Release

on:
  push:
    branches:
      - master
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract version information
        run: |
          echo "$(echo '${{ github.event.head_commit.message }}' | grep -oE 'Release [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sed 's/Release //')"
          VERSION=$(echo '${{ github.event.head_commit.message }}' | grep -oE 'Release [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sed 's/Release //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        if: "contains(github.event.head_commit.message, 'Release')"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Run tests
        run: ./gradlew test
        
      - name: Publish to Maven Central
        if: env.VERSION
        run: ./gradlew publishAllPublicationsToMavenCentral --no-daemon
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.USER_NAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Create GitHub Release
        if: env.VERSION
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}




#      - name: Update version in README
#        run: |
#          VERSION=$(./gradlew properties | grep "version:" | awk '{print $2}')
#          echo "Released version $VERSION"
