name: Publish to Maven Central And Release

on:
  push:
    branches:
      - master
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract version information
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oE 'Release [0-9]+\.[0-9]+\.[0-9]+' | sed 's/Release //')
          if [[ -n "$VERSION" ]]; then
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          fi

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
          
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Test with Gradle
        run: ./gradlew test --stacktrace --parallel
        
      - name: Publish to Maven Central
        if: env.VERSION != ''
        run: ./gradlew clean publish --no-daemon
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.USER_NAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Create GitHub Release
        if: env.VERSION != ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          draft: true

      - name: Update version in README
        if: env.VERSION != ''
        run: |
          echo "Released version ${{ env.VERSION }}"
